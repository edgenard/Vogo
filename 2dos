see also TODOs in code

community
	upload results to server/community results page
		adapt API to allow import to UI
		define & document API
			improve compiler scheme image
		clientside code-based import & export
			what is "common" for code and ui
			version check
		serverside exchange method
		clientside browse and import
		clientside share
	show examples

small
	drawIcons -> improve in funCall and branch! -> hide labels when not selected (as in move and rotate)
	put styles into css
	allow esc during drag (of line/rotate/loop) to abort and revert to previous parameters
	ctrl+d = duplicate selected command -> create proxy, instead of copy (ctrl+c) (can be emulated by funcCall)
	selection is not undone if commands are added in function scope (see TODO)
	funcCall: make result of arg visible as text field on hover of arg
	funcCall: make it visible (at least the "f") when it is a proxy>1
	more tooltips, more sanity checks
	auto-select newly created commands
	indicateIfInsideAnySelectedCommandsScope on hover
	improve function call look -> context menu for args
	handling endless recursion by checking line-length or out of bounds
	show results of expressions beneath input field "=..."
	cycle (select) through elements (as in code) with arrow keys
	add switch for add before or after selected element
	manipulation preview has different style (e.g. lower opacity)
	one selected element can contain another selected element - fix?!
		is this creating bugs when removeDeselectAndDeleteAllCompletely ?
	ctrl+a -> select all
	2 subsequent moves cannot be distinguished
	if an Expression is set to say Math.random(), it is considered static because it does not depend on arguments
	rotate/move/loop with 0 is not visible
	remove loops when empty (e.g. removed last inner command)
	function name (& branch cond) input field has no drag event, but selections via mouse is disabled

big
	automatic tests
	edit Move style (colour, breadth)
	Collision-Free positioning
		check same state of commands, then shift y ?
	add svg-native circle/arc
	constraint solving
		snapping/line end handles
	bigger click radius, especially for Move
	variables can reference variables (on global scope)
	How can the program flow be visualised (stepping through)?
		Map a parameter to space (show multiple "shadow instances" of it)
	selection z-order-handling (ALT selects below)
		this is actually hard, because event propagation will not work
		I will need to manually compute which elements a click hit
		http://mozilla.6506.n7.nabble.com/Event-Bubbling-through-Layers-td247852.html
	allow functions as arguments
	undo
	store session in local browser cache
	allow much more dragging between elements
	code ui view/codemirror
	Logo output
	asynchronous (endless) recursion progression
		make recursion depth depend on run execution time
	store which expression requires which variables, so I only eval those
	drag in input field with expressions

new commands
	mirror
	close path
		edit fill
	goto, go home, go to point in past
		go back X states in time
	Beziers
	resize, rotate, shear


bugs
	call a func A in B, then while B is focused, change a parameter of A: the turtle in B does not update properly (lags behind)
	call a func A in B, then while B is focused, rename/remove a parameter of A: old remains in argsList of funcCall
	deleting a recursing funcCall does not seem to work smoothly (reproducable?)
	chromium only (chrome works): the input fields inside foreign objects do not update on manual editing


