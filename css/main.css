@font-face {
	font-family: "Open Sans";
	local: "Open Sans";
	src: url("OpenSans-Regular.ttf") format('truetype');
}
body {
	margin: 0;
	padding: 0;
	font-family: "Open Sans", sans-serif;
}
noscript {
    z-index: 5;
    position: fixed;
    background-color: red;
    width: 100%;
    text-align: center;
    padding: 5px;
    text-shadow: 1px 1px 0px rgba(255, 255, 255, 0.4);
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
}
a {
	outline: none;
	text-decoration: none;
}
.border {
	position: absolute;
	height: 100%;
	width: 1px;
	cursor: col-resize;
	z-index: 2;
}
.border div {
	height: 100%;
	width: 1px;
	background-color: rgba(170,170,170,1);
    /* this is VERY rendering performance intensive */
	/*box-shadow: 0 0 7px rgba(0,0,0,0.6);*/
	cursor: col-resize;
}
#borderL {
	left: 15%; /*coupled*/
	padding-right: 7px; /*click radius*/
}
#borderL div {
	left: 0;
}
#borderR {
	right: 6%; /*coupled*/
	padding-left: 7px;
}
#borderR div {
	right: 0;
}
#functions {
	position: absolute;
	left: 0;
	top: 0;
	width: 15%; /*coupled*/
	height: 100%;
	overflow-y: auto;
}
#functions, #toolbar {
	/*background-color: #d6d6d6;*/
	background: url("../images/ticks_t_200x200.png") repeat scroll 0 0 #d6d6d6;
}
#toolbar {
	position: absolute;
	height: 100%;
	width: 6%; /*coupled*/
	right: 0%;
	background-color: #D6D6D6;
	overflow-y: auto;
	-moz-user-select: none;
	user-select: none;
}
#turtleSVGcontainer {
	position: fixed;
	right: 5%; /*coupled*/
	top: 0;
	width: 80%; /*coupled*/
	height: 100%;
}
#turtleSVG {
	width: 100%;
	height: 100%;
	/*border: 1px grey solid;*/
    /* this is VERY rendering performance intensive */
	/*box-shadow: inset 0 0 160px rgba(0,0,0,0.07);*/
	/*background-color: #fff;*/
    background: url("../images/cardboard_flat_030_200x200_noalpha.png") repeat scroll 0 0 #fff;
}





.turtle path {
    fill: #ffba4c;
    fill-opacity: 0.6;
    stroke: none;
}
.turtleHome path {
    fill: none;
    stroke: #d07f00;
    stroke-width: .2;
}
.turtle, .turtleHome {
    pointer-events: none;
}
.selectionRect {
    stroke: #000;
    stroke-opacity: 1;
    /*stroke-width: 0.05;*/
    vector-effect: non-scaling-stroke;
    fill-opacity: 0;
}


svg line, .rotate {
	cursor: pointer;
}
.rotate {
    fill: #000;
    fill-opacity: 0.1;
}
.rotate:hover {
    fill: #f00;
}
.loop path {
    fill: #000;
    fill-opacity: 0.2;
}
.loop circle {
    fill: #fff;
    fill-opacity: 0.01; /*for clickability*/
    stroke: #777;
    stroke-width: .05;
}
.funcCall > body > text { /*ƒ..*/
    cursor: pointer;
}
.funcCall > body > ul div { /*arg*/
    cursor: pointer;
    font-size: 10px;
    color: #666;
}
.branch line {
    stroke: #666;
    stroke-width: .3;
    stroke-linecap: round;
}


.rotate[selected], line[selected], .loop[selected] circle {
    stroke: #f00;
    stroke-opacity: 1;
}
.funcCall[selected] > body > text { /*ƒ..*/
    color: #f00;
}
.rotate[selected], .rotate[mark] {
	/*shape-rendering: crispEdges;*/
	vector-effect: non-scaling-stroke;
}
.rotate[mark]:not([selected]), line[mark]:not([selected]), .loop[mark]:not([selected]) circle {
	stroke: #00f;
	stroke-opacity: 1;
}
.funcCall[mark]:not([selected]) > body > text {
    color: #44f;
}
.branch[mark]:not([selected]) line {
    stroke: #00f;
}
.branch[selected] line {
    stroke: #f00;
}


line[inscope] {
    stroke-opacity: 0.3 !important;
}
.rotate[inscope] {
    fill-opacity: 0.05 !important;
}
.loop[inscope], .funcCall[inscope], .branch[inscope] {
    opacity: 0.4 !important;
}


.rotate[dragging] {
	fill: #f0f;
	fill-opacity: 1;
}
line[dragging] {
	stroke: #f0f;
    stroke-opacity: 1;
}
.loop[dragging] path {
    fill: #f0f;
    fill-opacity: 1;
}






#functions #ul_f {
	list-style: none;
	margin: 7% 7% 3% 7%;
	padding: 0;
	/*background-color: #ccf;*/
	width: 86%;
	/*left: 5%;*/
}
#functions #ul_f > li {
	padding-bottom: 7%;
	/*border: 1px solid rgba(0, 0, 0, 0.1);*/
}
.fSVG {
	cursor: pointer;
}
#functions .fSVGcontainer {
/*	height: 180px;*/
	width: 100%;
	border: 1px solid #aaa;
	box-shadow: 1px 0px 5px rgba(0, 0, 0, 0.1);
	background-color: #e3e3e3;
}
.fSVGselected {
	background-color: #fff !important;
	border: 1px solid #555 !important;
	box-shadow: 1px 0px 5px rgba(0, 0, 0, 0.3) !important;
}
#functions .fSVGcontainer svg {
	width: 100%;
	height: 100%;
	/*background-color: #ddd;*/
}
#functions .ul_args {
	list-style: none;
	padding-bottom: 3px;
	padding-left: 15px;
}
#functions .ul_args span {
	color: #55f;
	padding-left: 3px;
}

.titleRow {
	display: table;
	width: 100%;
}
.titleRowCell {
	display: table-cell;
}
.titleRowCell:first-child {
	width: 100%;
}
.titleRowCellLast {
	display: table-cell;
}
.titleRowCellLast:last-child {
	width: 100%;
}
#functions .f_name {
	box-sizing: border-box; /*http://stackoverflow.com/questions/17175038/css-dynamic-length-text-input-field-and-submit-button-in-one-row*/
    font-size: 125%;
	/*font-weight: bold;*/
	color: #333;
}
#functions .f_name, #functions .f_argument {
	width: 100%;
	border: 0 none;
	border-bottom: 1px solid rgba(0,0,0,0);
	background-color: transparent;
	transition: border-bottom 200ms ease-in-out;
}
#functions .f_name:hover, #functions .f_argument:hover {
	border-bottom: 1px solid rgba(0,0,0,0.15);
}
#functions .f_argument {
	cursor: col-resize;
	font-size: 115%;
}
#functions .f_remove {
	/*float: right;*/
    padding: 0px 5px 2px 5px;
	margin: 0;
	font-weight: bold;
	font-size: 100%;
    color: #aaa;
    background-color: transparent;
    border: 0 none;
    border-radius: 3px;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
	cursor: pointer;
	transition: color 200ms ease-in-out;
}
#functions .f_remove:hover {
	color: #777;
}

#notification {
	position: absolute;
	width: 95%;
	left: 15px;
	bottom: 7px;
	margin: 0;
	color: rgba(170, 170, 170, 1);
	/*transition: opacity 200ms ease-in-out;*/
	z-index: 2;
	transition: opacity 200ms ease-in-out;
}
.opacity0 { opacity: 0 }
svg, input, div, img {
	/*since drag-adjust is supported on all input fields,
	user-select is only desirable if done via keyboard,
	which works despite these settings*/
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    user-select: none;
    outline: 0;
}
.inputInEditState { color: #777 }
.inputInWrongState { color: #f55 !important }
.hide { display: none;}
foreignObject {
	pointer-events: none;
}
svg body {
	/*makes foreignObject bodies size scale with its contents*/
	display: inline-block;
	pointer-events: auto;
}
/*foreignObject input -> does not work. no idea why.*/
svg input {
	border: 0 none;
	background-color: rgba(0,0,0,0.05);
	border-radius: 4px;
	transition: background-color 300ms ease-in-out;
	cursor: col-resize;
}
svg input:focus {
	background-color: rgba(255,0,0,0.1);
}
svg ul {
	margin: 0;
	padding: 0 0 0 12px; /*top right bottom left*/
}
svg li {
	list-style: none;
}

#ul_toolbar {
	list-style: none;
	padding: 0 0 10% 0;
	margin: 0;
}
#ul_toolbar li {
	margin: 4%;
	cursor: pointer;
	border-radius: 5px;
	border: 1px solid rgba(0,0,0,0);
}
#ul_toolbar li:hover {
	background: linear-gradient(to top, rgba(218,218,218,1), rgba(233,233,233,1));
	border: 1px solid rgba(0,0,0,0.15);
}
#ul_toolbar img, #ul_toolbar .container-box { /* help botton and lis container box*/
	width: 41%;
	height: 41%;
	padding: 10% 5% 10% 5%; /*top right bottom left*/
}
#ul_toolbar img, .container-box {
	padding: 4%;
	vertical-align: middle;
	display: inline-block;
	max-height: 100%;
}
.container-box svg {
	max-width: 100%;
	max-height: 100%;
}
.aspect-box {
	padding-top: 100%; /*1:1 aspect*/
	position: relative;
}
.content-box {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}


.centerDiv {
	padding-top: 3px;
	width: 100%;
	text-align: center;
	/*background-color: #000;*/
}
#functions .centerDiv {
    padding-bottom: 25px;
}
.helpSVGcontainer {
	width: 40%;
}
#functions .container-box {
	width: 14%;
}
.roundButton {
    color: #aaa;
    background-color: #d8d8d8;
	max-width: 100%;
	max-height: 100%;
	border-radius: 50%; /*cicle*/
    border: 0 none;
    box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07), 0 0 1px rgba(0, 0, 0, 0.2), 0 1px 0 rgba(255, 255, 255, 0.3) inset;
	cursor: pointer;
	transition: color 100ms ease-in-out, background-color 100ms ease-in-out;
}
.roundButton:hover {
	color: #888;
	background-color: #ddd;
}
